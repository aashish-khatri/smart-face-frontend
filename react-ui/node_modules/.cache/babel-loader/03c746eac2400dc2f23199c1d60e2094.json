{"ast":null,"code":"var _jsxFileName = \"/home/khatri/webd_projects/smart-face-recognition/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logos/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignInForm from './components/SignInForm/SignInForm';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '5539b89d762c46b2b55ad124db732c62'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const faceBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: faceBox.left_col * width,\n        topRow: height * faceBox.top_row,\n        rightCol: width - faceBox.right_col * width,\n        bottomRow: height - faceBox.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      box,\n      route\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 8\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(SignInForm, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 18\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/khatri/webd_projects/smart-face-recognition/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","SignInForm","Register","Particles","Clarifai","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","faceBox","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logos/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport SignInForm from './components/SignInForm/SignInForm'\nimport Register from './components/Register/Register'\n\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n apiKey: '5539b89d762c46b2b55ad124db732c62'\n});\n\nconst particleOptions = {\n      particles: {\n        number:{\n          value: 100,\n          density: {\n            enable: true,\n            value_area: 1000\n          }\n        }\n}\n}\n\nconst initialState = {\n    input:'',\n    imageUrl: '',\n    box: {},\n    route: 'signin',\n    isSignedIn: false,\n    user: {\n      id: '',\n      name: '',\n      email: '',\n      entries: 0,\n      joined: ''\n  }\n} \n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n  \n  calculateFaceLocation = (data) => {\n    const faceBox = data.outputs[0]\n                    .data.regions[0]\n                    .region_info\n                    .bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: (faceBox.left_col) * width,\n      topRow: height * (faceBox.top_row),\n      rightCol: width - (faceBox.right_col * width),\n      bottomRow: height - (faceBox.bottom_row * height) \n    }\n\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    this.setState( {imageUrl: this.state.input} );\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n               this.state.input)\n      .then( response => {\n        if(response) {\n          fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: { 'Content-Type' : 'application/json' },\n          body: JSON.stringify({\n            id: this.state.user.id\n      })\n    }).then(response => response.json())\n      .then(count => {\n        this.setState(Object.assign(this.state.user, {entries: count}))\n      })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))})\n      .catch( err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\nthis.setState(initialState)\n    }\n    else if(route === 'home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route: route})\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, box, route } = this.state; \n    return(\n        <div className=\"App\">\n       <Particles \n          className= 'particles'\n          params={particleOptions} />\n       <Navigation isSignedIn = {isSignedIn} \n                   onRouteChange = {this.onRouteChange} />\n            {\n            route === 'home'\n              ? <div>\n                <Logo />\n                <Rank name = {this.state.user.name} \n                      entries = {this.state.user.entries} />\n                <ImageLinkForm \n                 onInputChange = {this.onInputChange} \n                 onButtonSubmit = {this.onButtonSubmit} />\n                <FaceRecognition \n                 box = {box} \n                 imageUrl = {imageUrl} />\n              </div>\n              :(\n                route === 'signin'\n                ?<SignInForm\n                  loadUser = {this.loadUser}\n                  onRouteChange = {this.onRouteChange} />\n                : <Register loadUser = {this.loadUser} onRouteChange = {this.onRouteChange} />\n                )\n           }\n        </div>\n      );\n    }\n  }\n\nexport default App;\n   "]},"metadata":{},"sourceType":"module"}